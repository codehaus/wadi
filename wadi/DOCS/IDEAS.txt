
CLUSTER PROTOCOL THOUGHTS

Its important that there is a 'leave' as well as a 'join' protocol so
that everyone can discern the difference between a controlled shutdown
and a catastrophic failure.

Nodes are arranged into

Explicit Join (1-N nodes)
- joiners have no state
- all existing members are informed of joining
- joiner is DTM and mediates join XA
- joiners negotiate ownership of some share of cluster state - it is migrated to them
- corresponding backup services are also redistributed and backup state rearranged

Explicit Leave (1-N nodes)
 - leavers inform all existing members of wish to leave
 - ownership of leavers' state is transferred to remaining members
 - leaver is DTM and mediates leave XA
 - corresponding backup services are also redistributed and backup state rearranged
 - leaver[s] drop[s] state and leave[s]

Implicit leave (failure)
 - interested parties should reach agreement that it is unreachable/dead
 - all members should be notified of the death
 - if node is 'undead' and makes contact with any member it will be notified that it is 'dead', should dump its state and rejoin
 - interested parties negotiate replacement services with rest of cluster

(3) cluster split....

say the cluster was split in two equally sized groups.
it is possible that each group would have a complete copy of the state
each group would see the other as having catastropically failed.
the fun starts when the network heals itself :-)

- interested parties should reach agreement that 1-N nodes are unreachable/dead.
- remaining nodes should adopt state owned by dead node[s]
- replacement services should be renegotiated amongst remaining nodes

(a) nodes never rejoin...

If N>B where N is the number of dead nodes and B is the number of
state backups, then we may have lost some state.

(b) nodes were really dead, are restarted and rejoin - goto

