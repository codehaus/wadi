
looks like portlet spec unifies session namespace inter-app and
cross-cluster.

if app-a/node-a invalidates session xxx, app-b/node-b must find out
and invalidate corresponding sesion...

sessions are store by key: <context>-<sessionid>-<bucketid> so
sessions in the same xcd-space will be in the same bucket, so will try
to colocate.

bucket must also be responsible for buliding another index for
xcd-enabled sessions (or should it be part of the same index ?:

<sessionid>: {[<context>, ,location>], ...}

so that, on invalidation of an xcd-enabled session, all other 'views'
on this session can also be invalidated...


maybe index should be a map of maps :

<sessionid>-<bucketid> : <context> : <location>

non-xcd enabled sessions could use a v.efficient SingletonMap wrapper
that just held a single <context>:<location> entry.

what about ejbs ?

